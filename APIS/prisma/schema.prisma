generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrador {
  id_administrador Int     @id @default(autoincrement())
  nombre           String? @db.VarChar(50)
  apellido         String? @db.VarChar(50)
  correo           String? @db.VarChar(100)
  contrase_a       String? @map("contrase√±a") @db.VarChar(100)
}

model fotos {
  id_foto       Int         @id @default(autoincrement())
  id_habitacion Int?
  foto1         String?     @db.VarChar(100)
  foto2         String?     @db.VarChar(100)
  foto3         String?     @db.VarChar(100)
  habitacion    habitacion? @relation(fields: [id_habitacion], references: [id_habitacion], onDelete: NoAction, onUpdate: NoAction)
}

model habitacion {
  id_habitacion  Int             @id @default(autoincrement())
  numero         Int?
  tipo           String?         @db.VarChar(50)
  capacidad      Int?
  disponibilidad String?         @db.VarChar(15)
  precio         Float?
  descripcion    String?         @db.Text
  fotos          fotos[]
  reservaciones  reservaciones[]
}

model reportecomentario {
  id_reportecomentario Int     @id @default(autoincrement())
  nombre               String? @db.VarChar(50)
  detalle              String?
}

model reportereserva {
  id_reporte     Int            @id @default(autoincrement())
  nombre         String?        @db.VarChar(50)
  id_reservacion Int?
  detalles       String?
  reservaciones  reservaciones? @relation(fields: [id_reservacion], references: [id_reservacion], onDelete: NoAction, onUpdate: NoAction)
}

model reservaciones {
  id_reservacion     Int              @id @default(autoincrement())
  nombre             String?          @db.VarChar(50)
  apellido           String?          @db.VarChar(50)
  correo_electronico String?          @db.VarChar(100)
  telefono           String?          @db.VarChar(15)
  id_habitacion      Int?
  fecha_entrada      DateTime?        @db.Date
  fecha_salida       DateTime?        @db.Date
  estado             String?          @db.VarChar(50)
  comprobante        String?          @db.VarChar(50)
  total              Float?
  reportereserva     reportereserva[]
  habitacion         habitacion?      @relation(fields: [id_habitacion], references: [id_habitacion], onDelete: NoAction, onUpdate: NoAction)
}

model cliente{
  id_cliente          Int              @id @default(autoincrement())
  nombre              String?          @db.VarChar(50) 
  apellido            String?          @db.VarChar(50) 
  correo_electronico  String?          @db.VarChar(100)
  telefono            String?          @db.VarChar(15)
}